/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dsi.intranet.eprocurement.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.dsi.intranet.eprocurement.model.WorkflowRequest;
import com.dsi.intranet.eprocurement.model.WorkflowRequestModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WorkflowRequest service. Represents a row in the &quot;eproc_workflow_request&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WorkflowRequestModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkflowRequestImpl}.
 * </p>
 *
 * @author CIGNEX Technologies
 * @see WorkflowRequestImpl
 * @see WorkflowRequest
 * @see WorkflowRequestModel
 * @generated
 */
@ProviderType
public class WorkflowRequestModelImpl extends BaseModelImpl<WorkflowRequest>
	implements WorkflowRequestModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a workflow request model instance should use the {@link WorkflowRequest} interface instead.
	 */
	public static final String TABLE_NAME = "eproc_workflow_request";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workflowRequestId", Types.BIGINT },
			{ "workflowDefinitionId", Types.BIGINT },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "isActive", Types.BOOLEAN },
			{ "createdBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("workflowRequestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("workflowDefinitionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classNameId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("isActive", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table eproc_workflow_request (workflowRequestId LONG not null primary key,workflowDefinitionId LONG,classNameId LONG,classPK LONG,isActive BOOLEAN,createdBy LONG,createdDate DATE null,modifiedBy LONG,modifiedDate DATE null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table eproc_workflow_request";
	public static final String ORDER_BY_JPQL = " ORDER BY workflowRequest.workflowRequestId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eproc_workflow_request.workflowRequestId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowRequest"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowRequest"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.dsi.intranet.eprocurement.model.WorkflowRequest"),
			true);
	public static final long CLASSNAMEID_COLUMN_BITMASK = 1L;
	public static final long CLASSPK_COLUMN_BITMASK = 2L;
	public static final long COMPANYID_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long ISACTIVE_COLUMN_BITMASK = 16L;
	public static final long WORKFLOWDEFINITIONID_COLUMN_BITMASK = 32L;
	public static final long WORKFLOWREQUESTID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.dsi.intranet.eprocurement.model.WorkflowRequest"));

	public WorkflowRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workflowRequestId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkflowRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workflowRequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkflowRequest.class;
	}

	@Override
	public String getModelClassName() {
		return WorkflowRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workflowRequestId", getWorkflowRequestId());
		attributes.put("workflowDefinitionId", getWorkflowDefinitionId());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("isActive", getIsActive());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long workflowRequestId = (Long)attributes.get("workflowRequestId");

		if (workflowRequestId != null) {
			setWorkflowRequestId(workflowRequestId);
		}

		Long workflowDefinitionId = (Long)attributes.get("workflowDefinitionId");

		if (workflowDefinitionId != null) {
			setWorkflowDefinitionId(workflowDefinitionId);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getWorkflowRequestId() {
		return _workflowRequestId;
	}

	@Override
	public void setWorkflowRequestId(long workflowRequestId) {
		_workflowRequestId = workflowRequestId;
	}

	@Override
	public long getWorkflowDefinitionId() {
		return _workflowDefinitionId;
	}

	@Override
	public void setWorkflowDefinitionId(long workflowDefinitionId) {
		_columnBitmask |= WORKFLOWDEFINITIONID_COLUMN_BITMASK;

		if (!_setOriginalWorkflowDefinitionId) {
			_setOriginalWorkflowDefinitionId = true;

			_originalWorkflowDefinitionId = _workflowDefinitionId;
		}

		_workflowDefinitionId = workflowDefinitionId;
	}

	public long getOriginalWorkflowDefinitionId() {
		return _originalWorkflowDefinitionId;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		_columnBitmask |= ISACTIVE_COLUMN_BITMASK;

		if (!_setOriginalIsActive) {
			_setOriginalIsActive = true;

			_originalIsActive = _isActive;
		}

		_isActive = isActive;
	}

	public boolean getOriginalIsActive() {
		return _originalIsActive;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkflowRequest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkflowRequest toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkflowRequest)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkflowRequestImpl workflowRequestImpl = new WorkflowRequestImpl();

		workflowRequestImpl.setWorkflowRequestId(getWorkflowRequestId());
		workflowRequestImpl.setWorkflowDefinitionId(getWorkflowDefinitionId());
		workflowRequestImpl.setClassNameId(getClassNameId());
		workflowRequestImpl.setClassPK(getClassPK());
		workflowRequestImpl.setIsActive(getIsActive());
		workflowRequestImpl.setCreatedBy(getCreatedBy());
		workflowRequestImpl.setCreatedDate(getCreatedDate());
		workflowRequestImpl.setModifiedBy(getModifiedBy());
		workflowRequestImpl.setModifiedDate(getModifiedDate());
		workflowRequestImpl.setCompanyId(getCompanyId());
		workflowRequestImpl.setGroupId(getGroupId());

		workflowRequestImpl.resetOriginalValues();

		return workflowRequestImpl;
	}

	@Override
	public int compareTo(WorkflowRequest workflowRequest) {
		long primaryKey = workflowRequest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkflowRequest)) {
			return false;
		}

		WorkflowRequest workflowRequest = (WorkflowRequest)obj;

		long primaryKey = workflowRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WorkflowRequestModelImpl workflowRequestModelImpl = this;

		workflowRequestModelImpl._originalWorkflowDefinitionId = workflowRequestModelImpl._workflowDefinitionId;

		workflowRequestModelImpl._setOriginalWorkflowDefinitionId = false;

		workflowRequestModelImpl._originalClassNameId = workflowRequestModelImpl._classNameId;

		workflowRequestModelImpl._setOriginalClassNameId = false;

		workflowRequestModelImpl._originalClassPK = workflowRequestModelImpl._classPK;

		workflowRequestModelImpl._setOriginalClassPK = false;

		workflowRequestModelImpl._originalIsActive = workflowRequestModelImpl._isActive;

		workflowRequestModelImpl._setOriginalIsActive = false;

		workflowRequestModelImpl._originalCompanyId = workflowRequestModelImpl._companyId;

		workflowRequestModelImpl._setOriginalCompanyId = false;

		workflowRequestModelImpl._originalGroupId = workflowRequestModelImpl._groupId;

		workflowRequestModelImpl._setOriginalGroupId = false;

		workflowRequestModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkflowRequest> toCacheModel() {
		WorkflowRequestCacheModel workflowRequestCacheModel = new WorkflowRequestCacheModel();

		workflowRequestCacheModel.workflowRequestId = getWorkflowRequestId();

		workflowRequestCacheModel.workflowDefinitionId = getWorkflowDefinitionId();

		workflowRequestCacheModel.classNameId = getClassNameId();

		workflowRequestCacheModel.classPK = getClassPK();

		workflowRequestCacheModel.isActive = getIsActive();

		workflowRequestCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			workflowRequestCacheModel.createdDate = createdDate.getTime();
		}
		else {
			workflowRequestCacheModel.createdDate = Long.MIN_VALUE;
		}

		workflowRequestCacheModel.modifiedBy = getModifiedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			workflowRequestCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			workflowRequestCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		workflowRequestCacheModel.companyId = getCompanyId();

		workflowRequestCacheModel.groupId = getGroupId();

		return workflowRequestCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{workflowRequestId=");
		sb.append(getWorkflowRequestId());
		sb.append(", workflowDefinitionId=");
		sb.append(getWorkflowDefinitionId());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.dsi.intranet.eprocurement.model.WorkflowRequest");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workflowRequestId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowDefinitionId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowDefinitionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WorkflowRequest.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkflowRequest.class
		};
	private long _workflowRequestId;
	private long _workflowDefinitionId;
	private long _originalWorkflowDefinitionId;
	private boolean _setOriginalWorkflowDefinitionId;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private boolean _isActive;
	private boolean _originalIsActive;
	private boolean _setOriginalIsActive;
	private long _createdBy;
	private Date _createdDate;
	private long _modifiedBy;
	private Date _modifiedDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private WorkflowRequest _escapedModel;
}