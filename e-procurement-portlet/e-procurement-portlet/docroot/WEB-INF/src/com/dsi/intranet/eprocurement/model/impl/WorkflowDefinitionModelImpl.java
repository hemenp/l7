/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dsi.intranet.eprocurement.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.dsi.intranet.eprocurement.model.WorkflowDefinition;
import com.dsi.intranet.eprocurement.model.WorkflowDefinitionModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WorkflowDefinition service. Represents a row in the &quot;eproc_workflow_definition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WorkflowDefinitionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkflowDefinitionImpl}.
 * </p>
 *
 * @author CIGNEX Technologies
 * @see WorkflowDefinitionImpl
 * @see WorkflowDefinition
 * @see WorkflowDefinitionModel
 * @generated
 */
@ProviderType
public class WorkflowDefinitionModelImpl extends BaseModelImpl<WorkflowDefinition>
	implements WorkflowDefinitionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a workflow definition model instance should use the {@link WorkflowDefinition} interface instead.
	 */
	public static final String TABLE_NAME = "eproc_workflow_definition";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workflowDefinitionId", Types.BIGINT },
			{ "workflowName", Types.VARCHAR },
			{ "stages", Types.VARCHAR },
			{ "isActive", Types.BOOLEAN },
			{ "createdBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("workflowDefinitionId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("workflowName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("stages", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isActive", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table eproc_workflow_definition (workflowDefinitionId LONG not null primary key,workflowName VARCHAR(75) null,stages VARCHAR(75) null,isActive BOOLEAN,createdBy LONG,createdDate DATE null,modifiedBy LONG,modifiedDate DATE null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table eproc_workflow_definition";
	public static final String ORDER_BY_JPQL = " ORDER BY workflowDefinition.workflowDefinitionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eproc_workflow_definition.workflowDefinitionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowDefinition"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowDefinition"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.dsi.intranet.eprocurement.model.WorkflowDefinition"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long ISACTIVE_COLUMN_BITMASK = 2L;
	public static final long WORKFLOWNAME_COLUMN_BITMASK = 4L;
	public static final long WORKFLOWDEFINITIONID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.dsi.intranet.eprocurement.model.WorkflowDefinition"));

	public WorkflowDefinitionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workflowDefinitionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkflowDefinitionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workflowDefinitionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkflowDefinition.class;
	}

	@Override
	public String getModelClassName() {
		return WorkflowDefinition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workflowDefinitionId", getWorkflowDefinitionId());
		attributes.put("workflowName", getWorkflowName());
		attributes.put("stages", getStages());
		attributes.put("isActive", getIsActive());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long workflowDefinitionId = (Long)attributes.get("workflowDefinitionId");

		if (workflowDefinitionId != null) {
			setWorkflowDefinitionId(workflowDefinitionId);
		}

		String workflowName = (String)attributes.get("workflowName");

		if (workflowName != null) {
			setWorkflowName(workflowName);
		}

		String stages = (String)attributes.get("stages");

		if (stages != null) {
			setStages(stages);
		}

		Boolean isActive = (Boolean)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getWorkflowDefinitionId() {
		return _workflowDefinitionId;
	}

	@Override
	public void setWorkflowDefinitionId(long workflowDefinitionId) {
		_workflowDefinitionId = workflowDefinitionId;
	}

	@Override
	public String getWorkflowName() {
		if (_workflowName == null) {
			return StringPool.BLANK;
		}
		else {
			return _workflowName;
		}
	}

	@Override
	public void setWorkflowName(String workflowName) {
		_columnBitmask |= WORKFLOWNAME_COLUMN_BITMASK;

		if (_originalWorkflowName == null) {
			_originalWorkflowName = _workflowName;
		}

		_workflowName = workflowName;
	}

	public String getOriginalWorkflowName() {
		return GetterUtil.getString(_originalWorkflowName);
	}

	@Override
	public String getStages() {
		if (_stages == null) {
			return StringPool.BLANK;
		}
		else {
			return _stages;
		}
	}

	@Override
	public void setStages(String stages) {
		_stages = stages;
	}

	@Override
	public boolean getIsActive() {
		return _isActive;
	}

	@Override
	public boolean isIsActive() {
		return _isActive;
	}

	@Override
	public void setIsActive(boolean isActive) {
		_columnBitmask |= ISACTIVE_COLUMN_BITMASK;

		if (!_setOriginalIsActive) {
			_setOriginalIsActive = true;

			_originalIsActive = _isActive;
		}

		_isActive = isActive;
	}

	public boolean getOriginalIsActive() {
		return _originalIsActive;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkflowDefinition.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkflowDefinition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkflowDefinition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkflowDefinitionImpl workflowDefinitionImpl = new WorkflowDefinitionImpl();

		workflowDefinitionImpl.setWorkflowDefinitionId(getWorkflowDefinitionId());
		workflowDefinitionImpl.setWorkflowName(getWorkflowName());
		workflowDefinitionImpl.setStages(getStages());
		workflowDefinitionImpl.setIsActive(getIsActive());
		workflowDefinitionImpl.setCreatedBy(getCreatedBy());
		workflowDefinitionImpl.setCreatedDate(getCreatedDate());
		workflowDefinitionImpl.setModifiedBy(getModifiedBy());
		workflowDefinitionImpl.setModifiedDate(getModifiedDate());
		workflowDefinitionImpl.setCompanyId(getCompanyId());
		workflowDefinitionImpl.setGroupId(getGroupId());

		workflowDefinitionImpl.resetOriginalValues();

		return workflowDefinitionImpl;
	}

	@Override
	public int compareTo(WorkflowDefinition workflowDefinition) {
		long primaryKey = workflowDefinition.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkflowDefinition)) {
			return false;
		}

		WorkflowDefinition workflowDefinition = (WorkflowDefinition)obj;

		long primaryKey = workflowDefinition.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WorkflowDefinitionModelImpl workflowDefinitionModelImpl = this;

		workflowDefinitionModelImpl._originalWorkflowName = workflowDefinitionModelImpl._workflowName;

		workflowDefinitionModelImpl._originalIsActive = workflowDefinitionModelImpl._isActive;

		workflowDefinitionModelImpl._setOriginalIsActive = false;

		workflowDefinitionModelImpl._originalCompanyId = workflowDefinitionModelImpl._companyId;

		workflowDefinitionModelImpl._setOriginalCompanyId = false;

		workflowDefinitionModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkflowDefinition> toCacheModel() {
		WorkflowDefinitionCacheModel workflowDefinitionCacheModel = new WorkflowDefinitionCacheModel();

		workflowDefinitionCacheModel.workflowDefinitionId = getWorkflowDefinitionId();

		workflowDefinitionCacheModel.workflowName = getWorkflowName();

		String workflowName = workflowDefinitionCacheModel.workflowName;

		if ((workflowName != null) && (workflowName.length() == 0)) {
			workflowDefinitionCacheModel.workflowName = null;
		}

		workflowDefinitionCacheModel.stages = getStages();

		String stages = workflowDefinitionCacheModel.stages;

		if ((stages != null) && (stages.length() == 0)) {
			workflowDefinitionCacheModel.stages = null;
		}

		workflowDefinitionCacheModel.isActive = getIsActive();

		workflowDefinitionCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			workflowDefinitionCacheModel.createdDate = createdDate.getTime();
		}
		else {
			workflowDefinitionCacheModel.createdDate = Long.MIN_VALUE;
		}

		workflowDefinitionCacheModel.modifiedBy = getModifiedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			workflowDefinitionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			workflowDefinitionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		workflowDefinitionCacheModel.companyId = getCompanyId();

		workflowDefinitionCacheModel.groupId = getGroupId();

		return workflowDefinitionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{workflowDefinitionId=");
		sb.append(getWorkflowDefinitionId());
		sb.append(", workflowName=");
		sb.append(getWorkflowName());
		sb.append(", stages=");
		sb.append(getStages());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.dsi.intranet.eprocurement.model.WorkflowDefinition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workflowDefinitionId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowDefinitionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowName</column-name><column-value><![CDATA[");
		sb.append(getWorkflowName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stages</column-name><column-value><![CDATA[");
		sb.append(getStages());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WorkflowDefinition.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkflowDefinition.class
		};
	private long _workflowDefinitionId;
	private String _workflowName;
	private String _originalWorkflowName;
	private String _stages;
	private boolean _isActive;
	private boolean _originalIsActive;
	private boolean _setOriginalIsActive;
	private long _createdBy;
	private Date _createdDate;
	private long _modifiedBy;
	private Date _modifiedDate;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _columnBitmask;
	private WorkflowDefinition _escapedModel;
}