/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dsi.intranet.eprocurement.service.base;

import com.dsi.intranet.eprocurement.model.EprocurementRequest;
import com.dsi.intranet.eprocurement.service.EprocurementRequestService;
import com.dsi.intranet.eprocurement.service.persistence.EprocurementLocationPersistence;
import com.dsi.intranet.eprocurement.service.persistence.EprocurementRequestPersistence;
import com.dsi.intranet.eprocurement.service.persistence.ItemPersistence;
import com.dsi.intranet.eprocurement.service.persistence.RequestAttachmentPersistence;
import com.dsi.intranet.eprocurement.service.persistence.WorkflowDefinitionPersistence;
import com.dsi.intranet.eprocurement.service.persistence.WorkflowRequestPersistence;
import com.dsi.intranet.eprocurement.service.persistence.WorkflowReviewPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the eprocurement request remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.dsi.intranet.eprocurement.service.impl.EprocurementRequestServiceImpl}.
 * </p>
 *
 * @author CIGNEX Technologies
 * @see com.dsi.intranet.eprocurement.service.impl.EprocurementRequestServiceImpl
 * @see com.dsi.intranet.eprocurement.service.EprocurementRequestServiceUtil
 * @generated
 */
public abstract class EprocurementRequestServiceBaseImpl extends BaseServiceImpl
	implements EprocurementRequestService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.dsi.intranet.eprocurement.service.EprocurementRequestServiceUtil} to access the eprocurement request remote service.
	 */

	/**
	 * Returns the eprocurement location local service.
	 *
	 * @return the eprocurement location local service
	 */
	public com.dsi.intranet.eprocurement.service.EprocurementLocationLocalService getEprocurementLocationLocalService() {
		return eprocurementLocationLocalService;
	}

	/**
	 * Sets the eprocurement location local service.
	 *
	 * @param eprocurementLocationLocalService the eprocurement location local service
	 */
	public void setEprocurementLocationLocalService(
		com.dsi.intranet.eprocurement.service.EprocurementLocationLocalService eprocurementLocationLocalService) {
		this.eprocurementLocationLocalService = eprocurementLocationLocalService;
	}

	/**
	 * Returns the eprocurement location persistence.
	 *
	 * @return the eprocurement location persistence
	 */
	public EprocurementLocationPersistence getEprocurementLocationPersistence() {
		return eprocurementLocationPersistence;
	}

	/**
	 * Sets the eprocurement location persistence.
	 *
	 * @param eprocurementLocationPersistence the eprocurement location persistence
	 */
	public void setEprocurementLocationPersistence(
		EprocurementLocationPersistence eprocurementLocationPersistence) {
		this.eprocurementLocationPersistence = eprocurementLocationPersistence;
	}

	/**
	 * Returns the eprocurement request local service.
	 *
	 * @return the eprocurement request local service
	 */
	public com.dsi.intranet.eprocurement.service.EprocurementRequestLocalService getEprocurementRequestLocalService() {
		return eprocurementRequestLocalService;
	}

	/**
	 * Sets the eprocurement request local service.
	 *
	 * @param eprocurementRequestLocalService the eprocurement request local service
	 */
	public void setEprocurementRequestLocalService(
		com.dsi.intranet.eprocurement.service.EprocurementRequestLocalService eprocurementRequestLocalService) {
		this.eprocurementRequestLocalService = eprocurementRequestLocalService;
	}

	/**
	 * Returns the eprocurement request remote service.
	 *
	 * @return the eprocurement request remote service
	 */
	public EprocurementRequestService getEprocurementRequestService() {
		return eprocurementRequestService;
	}

	/**
	 * Sets the eprocurement request remote service.
	 *
	 * @param eprocurementRequestService the eprocurement request remote service
	 */
	public void setEprocurementRequestService(
		EprocurementRequestService eprocurementRequestService) {
		this.eprocurementRequestService = eprocurementRequestService;
	}

	/**
	 * Returns the eprocurement request persistence.
	 *
	 * @return the eprocurement request persistence
	 */
	public EprocurementRequestPersistence getEprocurementRequestPersistence() {
		return eprocurementRequestPersistence;
	}

	/**
	 * Sets the eprocurement request persistence.
	 *
	 * @param eprocurementRequestPersistence the eprocurement request persistence
	 */
	public void setEprocurementRequestPersistence(
		EprocurementRequestPersistence eprocurementRequestPersistence) {
		this.eprocurementRequestPersistence = eprocurementRequestPersistence;
	}

	/**
	 * Returns the item local service.
	 *
	 * @return the item local service
	 */
	public com.dsi.intranet.eprocurement.service.ItemLocalService getItemLocalService() {
		return itemLocalService;
	}

	/**
	 * Sets the item local service.
	 *
	 * @param itemLocalService the item local service
	 */
	public void setItemLocalService(
		com.dsi.intranet.eprocurement.service.ItemLocalService itemLocalService) {
		this.itemLocalService = itemLocalService;
	}

	/**
	 * Returns the item persistence.
	 *
	 * @return the item persistence
	 */
	public ItemPersistence getItemPersistence() {
		return itemPersistence;
	}

	/**
	 * Sets the item persistence.
	 *
	 * @param itemPersistence the item persistence
	 */
	public void setItemPersistence(ItemPersistence itemPersistence) {
		this.itemPersistence = itemPersistence;
	}

	/**
	 * Returns the request attachment local service.
	 *
	 * @return the request attachment local service
	 */
	public com.dsi.intranet.eprocurement.service.RequestAttachmentLocalService getRequestAttachmentLocalService() {
		return requestAttachmentLocalService;
	}

	/**
	 * Sets the request attachment local service.
	 *
	 * @param requestAttachmentLocalService the request attachment local service
	 */
	public void setRequestAttachmentLocalService(
		com.dsi.intranet.eprocurement.service.RequestAttachmentLocalService requestAttachmentLocalService) {
		this.requestAttachmentLocalService = requestAttachmentLocalService;
	}

	/**
	 * Returns the request attachment persistence.
	 *
	 * @return the request attachment persistence
	 */
	public RequestAttachmentPersistence getRequestAttachmentPersistence() {
		return requestAttachmentPersistence;
	}

	/**
	 * Sets the request attachment persistence.
	 *
	 * @param requestAttachmentPersistence the request attachment persistence
	 */
	public void setRequestAttachmentPersistence(
		RequestAttachmentPersistence requestAttachmentPersistence) {
		this.requestAttachmentPersistence = requestAttachmentPersistence;
	}

	/**
	 * Returns the workflow definition local service.
	 *
	 * @return the workflow definition local service
	 */
	public com.dsi.intranet.eprocurement.service.WorkflowDefinitionLocalService getWorkflowDefinitionLocalService() {
		return workflowDefinitionLocalService;
	}

	/**
	 * Sets the workflow definition local service.
	 *
	 * @param workflowDefinitionLocalService the workflow definition local service
	 */
	public void setWorkflowDefinitionLocalService(
		com.dsi.intranet.eprocurement.service.WorkflowDefinitionLocalService workflowDefinitionLocalService) {
		this.workflowDefinitionLocalService = workflowDefinitionLocalService;
	}

	/**
	 * Returns the workflow definition persistence.
	 *
	 * @return the workflow definition persistence
	 */
	public WorkflowDefinitionPersistence getWorkflowDefinitionPersistence() {
		return workflowDefinitionPersistence;
	}

	/**
	 * Sets the workflow definition persistence.
	 *
	 * @param workflowDefinitionPersistence the workflow definition persistence
	 */
	public void setWorkflowDefinitionPersistence(
		WorkflowDefinitionPersistence workflowDefinitionPersistence) {
		this.workflowDefinitionPersistence = workflowDefinitionPersistence;
	}

	/**
	 * Returns the workflow request local service.
	 *
	 * @return the workflow request local service
	 */
	public com.dsi.intranet.eprocurement.service.WorkflowRequestLocalService getWorkflowRequestLocalService() {
		return workflowRequestLocalService;
	}

	/**
	 * Sets the workflow request local service.
	 *
	 * @param workflowRequestLocalService the workflow request local service
	 */
	public void setWorkflowRequestLocalService(
		com.dsi.intranet.eprocurement.service.WorkflowRequestLocalService workflowRequestLocalService) {
		this.workflowRequestLocalService = workflowRequestLocalService;
	}

	/**
	 * Returns the workflow request persistence.
	 *
	 * @return the workflow request persistence
	 */
	public WorkflowRequestPersistence getWorkflowRequestPersistence() {
		return workflowRequestPersistence;
	}

	/**
	 * Sets the workflow request persistence.
	 *
	 * @param workflowRequestPersistence the workflow request persistence
	 */
	public void setWorkflowRequestPersistence(
		WorkflowRequestPersistence workflowRequestPersistence) {
		this.workflowRequestPersistence = workflowRequestPersistence;
	}

	/**
	 * Returns the workflow review local service.
	 *
	 * @return the workflow review local service
	 */
	public com.dsi.intranet.eprocurement.service.WorkflowReviewLocalService getWorkflowReviewLocalService() {
		return workflowReviewLocalService;
	}

	/**
	 * Sets the workflow review local service.
	 *
	 * @param workflowReviewLocalService the workflow review local service
	 */
	public void setWorkflowReviewLocalService(
		com.dsi.intranet.eprocurement.service.WorkflowReviewLocalService workflowReviewLocalService) {
		this.workflowReviewLocalService = workflowReviewLocalService;
	}

	/**
	 * Returns the workflow review persistence.
	 *
	 * @return the workflow review persistence
	 */
	public WorkflowReviewPersistence getWorkflowReviewPersistence() {
		return workflowReviewPersistence;
	}

	/**
	 * Sets the workflow review persistence.
	 *
	 * @param workflowReviewPersistence the workflow review persistence
	 */
	public void setWorkflowReviewPersistence(
		WorkflowReviewPersistence workflowReviewPersistence) {
		this.workflowReviewPersistence = workflowReviewPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return EprocurementRequestService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return EprocurementRequest.class;
	}

	protected String getModelClassName() {
		return EprocurementRequest.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = eprocurementRequestPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.dsi.intranet.eprocurement.service.EprocurementLocationLocalService.class)
	protected com.dsi.intranet.eprocurement.service.EprocurementLocationLocalService eprocurementLocationLocalService;
	@BeanReference(type = EprocurementLocationPersistence.class)
	protected EprocurementLocationPersistence eprocurementLocationPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.EprocurementRequestLocalService.class)
	protected com.dsi.intranet.eprocurement.service.EprocurementRequestLocalService eprocurementRequestLocalService;
	@BeanReference(type = EprocurementRequestService.class)
	protected EprocurementRequestService eprocurementRequestService;
	@BeanReference(type = EprocurementRequestPersistence.class)
	protected EprocurementRequestPersistence eprocurementRequestPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.ItemLocalService.class)
	protected com.dsi.intranet.eprocurement.service.ItemLocalService itemLocalService;
	@BeanReference(type = ItemPersistence.class)
	protected ItemPersistence itemPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.RequestAttachmentLocalService.class)
	protected com.dsi.intranet.eprocurement.service.RequestAttachmentLocalService requestAttachmentLocalService;
	@BeanReference(type = RequestAttachmentPersistence.class)
	protected RequestAttachmentPersistence requestAttachmentPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.WorkflowDefinitionLocalService.class)
	protected com.dsi.intranet.eprocurement.service.WorkflowDefinitionLocalService workflowDefinitionLocalService;
	@BeanReference(type = WorkflowDefinitionPersistence.class)
	protected WorkflowDefinitionPersistence workflowDefinitionPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.WorkflowRequestLocalService.class)
	protected com.dsi.intranet.eprocurement.service.WorkflowRequestLocalService workflowRequestLocalService;
	@BeanReference(type = WorkflowRequestPersistence.class)
	protected WorkflowRequestPersistence workflowRequestPersistence;
	@BeanReference(type = com.dsi.intranet.eprocurement.service.WorkflowReviewLocalService.class)
	protected com.dsi.intranet.eprocurement.service.WorkflowReviewLocalService workflowReviewLocalService;
	@BeanReference(type = WorkflowReviewPersistence.class)
	protected WorkflowReviewPersistence workflowReviewPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private EprocurementRequestServiceClpInvoker _clpInvoker = new EprocurementRequestServiceClpInvoker();
}