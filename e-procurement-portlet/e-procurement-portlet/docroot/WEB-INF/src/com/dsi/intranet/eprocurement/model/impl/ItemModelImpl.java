/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dsi.intranet.eprocurement.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.dsi.intranet.eprocurement.model.Item;
import com.dsi.intranet.eprocurement.model.ItemModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Item service. Represents a row in the &quot;eproc_item&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ItemImpl}.
 * </p>
 *
 * @author CIGNEX Technologies
 * @see ItemImpl
 * @see Item
 * @see ItemModel
 * @generated
 */
@ProviderType
public class ItemModelImpl extends BaseModelImpl<Item> implements ItemModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a item model instance should use the {@link Item} interface instead.
	 */
	public static final String TABLE_NAME = "eproc_item";
	public static final Object[][] TABLE_COLUMNS = {
			{ "itemId", Types.BIGINT },
			{ "itemName", Types.VARCHAR },
			{ "itemDescription", Types.VARCHAR },
			{ "quantity", Types.BIGINT },
			{ "cost", Types.DOUBLE },
			{ "originalCost", Types.DOUBLE },
			{ "wbselement", Types.VARCHAR },
			{ "glAccNo", Types.VARCHAR },
			{ "costCenter", Types.VARCHAR },
			{ "requestId", Types.BIGINT },
			{ "itemInStock", Types.BOOLEAN },
			{ "vendorCode", Types.VARCHAR },
			{ "purchaseOrder", Types.VARCHAR },
			{ "recievedDate", Types.TIMESTAMP },
			{ "returnedDate", Types.TIMESTAMP },
			{ "assetInfo", Types.VARCHAR },
			{ "returnedAssets", Types.VARCHAR },
			{ "createdBy", Types.BIGINT },
			{ "createdDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("itemId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("itemName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("itemDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quantity", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("cost", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("originalCost", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("wbselement", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("glAccNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("costCenter", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("requestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("itemInStock", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("vendorCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("purchaseOrder", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("recievedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("returnedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("assetInfo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("returnedAssets", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table eproc_item (itemId LONG not null primary key,itemName VARCHAR(75) null,itemDescription VARCHAR(75) null,quantity LONG,cost DOUBLE,originalCost DOUBLE,wbselement VARCHAR(75) null,glAccNo VARCHAR(75) null,costCenter VARCHAR(75) null,requestId LONG,itemInStock BOOLEAN,vendorCode VARCHAR(75) null,purchaseOrder VARCHAR(75) null,recievedDate DATE null,returnedDate DATE null,assetInfo VARCHAR(75) null,returnedAssets VARCHAR(75) null,createdBy LONG,createdDate DATE null,modifiedBy LONG,modifiedDate DATE null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table eproc_item";
	public static final String ORDER_BY_JPQL = " ORDER BY item.itemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eproc_item.itemId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.dsi.intranet.eprocurement.model.Item"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.dsi.intranet.eprocurement.model.Item"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.dsi.intranet.eprocurement.model.Item"),
			true);
	public static final long REQUESTID_COLUMN_BITMASK = 1L;
	public static final long ITEMID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.dsi.intranet.eprocurement.model.Item"));

	public ItemModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _itemId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setItemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _itemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Item.class;
	}

	@Override
	public String getModelClassName() {
		return Item.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemId", getItemId());
		attributes.put("itemName", getItemName());
		attributes.put("itemDescription", getItemDescription());
		attributes.put("quantity", getQuantity());
		attributes.put("cost", getCost());
		attributes.put("originalCost", getOriginalCost());
		attributes.put("wbselement", getWbselement());
		attributes.put("glAccNo", getGlAccNo());
		attributes.put("costCenter", getCostCenter());
		attributes.put("requestId", getRequestId());
		attributes.put("itemInStock", getItemInStock());
		attributes.put("vendorCode", getVendorCode());
		attributes.put("purchaseOrder", getPurchaseOrder());
		attributes.put("recievedDate", getRecievedDate());
		attributes.put("returnedDate", getReturnedDate());
		attributes.put("assetInfo", getAssetInfo());
		attributes.put("returnedAssets", getReturnedAssets());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long itemId = (Long)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		String itemName = (String)attributes.get("itemName");

		if (itemName != null) {
			setItemName(itemName);
		}

		String itemDescription = (String)attributes.get("itemDescription");

		if (itemDescription != null) {
			setItemDescription(itemDescription);
		}

		Long quantity = (Long)attributes.get("quantity");

		if (quantity != null) {
			setQuantity(quantity);
		}

		Double cost = (Double)attributes.get("cost");

		if (cost != null) {
			setCost(cost);
		}

		Double originalCost = (Double)attributes.get("originalCost");

		if (originalCost != null) {
			setOriginalCost(originalCost);
		}

		String wbselement = (String)attributes.get("wbselement");

		if (wbselement != null) {
			setWbselement(wbselement);
		}

		String glAccNo = (String)attributes.get("glAccNo");

		if (glAccNo != null) {
			setGlAccNo(glAccNo);
		}

		String costCenter = (String)attributes.get("costCenter");

		if (costCenter != null) {
			setCostCenter(costCenter);
		}

		Long requestId = (Long)attributes.get("requestId");

		if (requestId != null) {
			setRequestId(requestId);
		}

		Boolean itemInStock = (Boolean)attributes.get("itemInStock");

		if (itemInStock != null) {
			setItemInStock(itemInStock);
		}

		String vendorCode = (String)attributes.get("vendorCode");

		if (vendorCode != null) {
			setVendorCode(vendorCode);
		}

		String purchaseOrder = (String)attributes.get("purchaseOrder");

		if (purchaseOrder != null) {
			setPurchaseOrder(purchaseOrder);
		}

		Date recievedDate = (Date)attributes.get("recievedDate");

		if (recievedDate != null) {
			setRecievedDate(recievedDate);
		}

		Date returnedDate = (Date)attributes.get("returnedDate");

		if (returnedDate != null) {
			setReturnedDate(returnedDate);
		}

		String assetInfo = (String)attributes.get("assetInfo");

		if (assetInfo != null) {
			setAssetInfo(assetInfo);
		}

		String returnedAssets = (String)attributes.get("returnedAssets");

		if (returnedAssets != null) {
			setReturnedAssets(returnedAssets);
		}

		Long createdBy = (Long)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getItemId() {
		return _itemId;
	}

	@Override
	public void setItemId(long itemId) {
		_itemId = itemId;
	}

	@Override
	public String getItemName() {
		if (_itemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemName;
		}
	}

	@Override
	public void setItemName(String itemName) {
		_itemName = itemName;
	}

	@Override
	public String getItemDescription() {
		if (_itemDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemDescription;
		}
	}

	@Override
	public void setItemDescription(String itemDescription) {
		_itemDescription = itemDescription;
	}

	@Override
	public long getQuantity() {
		return _quantity;
	}

	@Override
	public void setQuantity(long quantity) {
		_quantity = quantity;
	}

	@Override
	public double getCost() {
		return _cost;
	}

	@Override
	public void setCost(double cost) {
		_cost = cost;
	}

	@Override
	public double getOriginalCost() {
		return _originalCost;
	}

	@Override
	public void setOriginalCost(double originalCost) {
		_originalCost = originalCost;
	}

	@Override
	public String getWbselement() {
		if (_wbselement == null) {
			return StringPool.BLANK;
		}
		else {
			return _wbselement;
		}
	}

	@Override
	public void setWbselement(String wbselement) {
		_wbselement = wbselement;
	}

	@Override
	public String getGlAccNo() {
		if (_glAccNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _glAccNo;
		}
	}

	@Override
	public void setGlAccNo(String glAccNo) {
		_glAccNo = glAccNo;
	}

	@Override
	public String getCostCenter() {
		if (_costCenter == null) {
			return StringPool.BLANK;
		}
		else {
			return _costCenter;
		}
	}

	@Override
	public void setCostCenter(String costCenter) {
		_costCenter = costCenter;
	}

	@Override
	public long getRequestId() {
		return _requestId;
	}

	@Override
	public void setRequestId(long requestId) {
		_columnBitmask |= REQUESTID_COLUMN_BITMASK;

		if (!_setOriginalRequestId) {
			_setOriginalRequestId = true;

			_originalRequestId = _requestId;
		}

		_requestId = requestId;
	}

	public long getOriginalRequestId() {
		return _originalRequestId;
	}

	@Override
	public boolean getItemInStock() {
		return _itemInStock;
	}

	@Override
	public boolean isItemInStock() {
		return _itemInStock;
	}

	@Override
	public void setItemInStock(boolean itemInStock) {
		_itemInStock = itemInStock;
	}

	@Override
	public String getVendorCode() {
		if (_vendorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _vendorCode;
		}
	}

	@Override
	public void setVendorCode(String vendorCode) {
		_vendorCode = vendorCode;
	}

	@Override
	public String getPurchaseOrder() {
		if (_purchaseOrder == null) {
			return StringPool.BLANK;
		}
		else {
			return _purchaseOrder;
		}
	}

	@Override
	public void setPurchaseOrder(String purchaseOrder) {
		_purchaseOrder = purchaseOrder;
	}

	@Override
	public Date getRecievedDate() {
		return _recievedDate;
	}

	@Override
	public void setRecievedDate(Date recievedDate) {
		_recievedDate = recievedDate;
	}

	@Override
	public Date getReturnedDate() {
		return _returnedDate;
	}

	@Override
	public void setReturnedDate(Date returnedDate) {
		_returnedDate = returnedDate;
	}

	@Override
	public String getAssetInfo() {
		if (_assetInfo == null) {
			return StringPool.BLANK;
		}
		else {
			return _assetInfo;
		}
	}

	@Override
	public void setAssetInfo(String assetInfo) {
		_assetInfo = assetInfo;
	}

	@Override
	public String getReturnedAssets() {
		if (_returnedAssets == null) {
			return StringPool.BLANK;
		}
		else {
			return _returnedAssets;
		}
	}

	@Override
	public void setReturnedAssets(String returnedAssets) {
		_returnedAssets = returnedAssets;
	}

	@Override
	public long getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(long createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Item.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Item toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Item)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ItemImpl itemImpl = new ItemImpl();

		itemImpl.setItemId(getItemId());
		itemImpl.setItemName(getItemName());
		itemImpl.setItemDescription(getItemDescription());
		itemImpl.setQuantity(getQuantity());
		itemImpl.setCost(getCost());
		itemImpl.setOriginalCost(getOriginalCost());
		itemImpl.setWbselement(getWbselement());
		itemImpl.setGlAccNo(getGlAccNo());
		itemImpl.setCostCenter(getCostCenter());
		itemImpl.setRequestId(getRequestId());
		itemImpl.setItemInStock(getItemInStock());
		itemImpl.setVendorCode(getVendorCode());
		itemImpl.setPurchaseOrder(getPurchaseOrder());
		itemImpl.setRecievedDate(getRecievedDate());
		itemImpl.setReturnedDate(getReturnedDate());
		itemImpl.setAssetInfo(getAssetInfo());
		itemImpl.setReturnedAssets(getReturnedAssets());
		itemImpl.setCreatedBy(getCreatedBy());
		itemImpl.setCreatedDate(getCreatedDate());
		itemImpl.setModifiedBy(getModifiedBy());
		itemImpl.setModifiedDate(getModifiedDate());
		itemImpl.setCompanyId(getCompanyId());
		itemImpl.setGroupId(getGroupId());

		itemImpl.resetOriginalValues();

		return itemImpl;
	}

	@Override
	public int compareTo(Item item) {
		long primaryKey = item.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Item)) {
			return false;
		}

		Item item = (Item)obj;

		long primaryKey = item.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ItemModelImpl itemModelImpl = this;

		itemModelImpl._originalRequestId = itemModelImpl._requestId;

		itemModelImpl._setOriginalRequestId = false;

		itemModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Item> toCacheModel() {
		ItemCacheModel itemCacheModel = new ItemCacheModel();

		itemCacheModel.itemId = getItemId();

		itemCacheModel.itemName = getItemName();

		String itemName = itemCacheModel.itemName;

		if ((itemName != null) && (itemName.length() == 0)) {
			itemCacheModel.itemName = null;
		}

		itemCacheModel.itemDescription = getItemDescription();

		String itemDescription = itemCacheModel.itemDescription;

		if ((itemDescription != null) && (itemDescription.length() == 0)) {
			itemCacheModel.itemDescription = null;
		}

		itemCacheModel.quantity = getQuantity();

		itemCacheModel.cost = getCost();

		itemCacheModel.originalCost = getOriginalCost();

		itemCacheModel.wbselement = getWbselement();

		String wbselement = itemCacheModel.wbselement;

		if ((wbselement != null) && (wbselement.length() == 0)) {
			itemCacheModel.wbselement = null;
		}

		itemCacheModel.glAccNo = getGlAccNo();

		String glAccNo = itemCacheModel.glAccNo;

		if ((glAccNo != null) && (glAccNo.length() == 0)) {
			itemCacheModel.glAccNo = null;
		}

		itemCacheModel.costCenter = getCostCenter();

		String costCenter = itemCacheModel.costCenter;

		if ((costCenter != null) && (costCenter.length() == 0)) {
			itemCacheModel.costCenter = null;
		}

		itemCacheModel.requestId = getRequestId();

		itemCacheModel.itemInStock = getItemInStock();

		itemCacheModel.vendorCode = getVendorCode();

		String vendorCode = itemCacheModel.vendorCode;

		if ((vendorCode != null) && (vendorCode.length() == 0)) {
			itemCacheModel.vendorCode = null;
		}

		itemCacheModel.purchaseOrder = getPurchaseOrder();

		String purchaseOrder = itemCacheModel.purchaseOrder;

		if ((purchaseOrder != null) && (purchaseOrder.length() == 0)) {
			itemCacheModel.purchaseOrder = null;
		}

		Date recievedDate = getRecievedDate();

		if (recievedDate != null) {
			itemCacheModel.recievedDate = recievedDate.getTime();
		}
		else {
			itemCacheModel.recievedDate = Long.MIN_VALUE;
		}

		Date returnedDate = getReturnedDate();

		if (returnedDate != null) {
			itemCacheModel.returnedDate = returnedDate.getTime();
		}
		else {
			itemCacheModel.returnedDate = Long.MIN_VALUE;
		}

		itemCacheModel.assetInfo = getAssetInfo();

		String assetInfo = itemCacheModel.assetInfo;

		if ((assetInfo != null) && (assetInfo.length() == 0)) {
			itemCacheModel.assetInfo = null;
		}

		itemCacheModel.returnedAssets = getReturnedAssets();

		String returnedAssets = itemCacheModel.returnedAssets;

		if ((returnedAssets != null) && (returnedAssets.length() == 0)) {
			itemCacheModel.returnedAssets = null;
		}

		itemCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			itemCacheModel.createdDate = createdDate.getTime();
		}
		else {
			itemCacheModel.createdDate = Long.MIN_VALUE;
		}

		itemCacheModel.modifiedBy = getModifiedBy();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			itemCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			itemCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		itemCacheModel.companyId = getCompanyId();

		itemCacheModel.groupId = getGroupId();

		return itemCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{itemId=");
		sb.append(getItemId());
		sb.append(", itemName=");
		sb.append(getItemName());
		sb.append(", itemDescription=");
		sb.append(getItemDescription());
		sb.append(", quantity=");
		sb.append(getQuantity());
		sb.append(", cost=");
		sb.append(getCost());
		sb.append(", originalCost=");
		sb.append(getOriginalCost());
		sb.append(", wbselement=");
		sb.append(getWbselement());
		sb.append(", glAccNo=");
		sb.append(getGlAccNo());
		sb.append(", costCenter=");
		sb.append(getCostCenter());
		sb.append(", requestId=");
		sb.append(getRequestId());
		sb.append(", itemInStock=");
		sb.append(getItemInStock());
		sb.append(", vendorCode=");
		sb.append(getVendorCode());
		sb.append(", purchaseOrder=");
		sb.append(getPurchaseOrder());
		sb.append(", recievedDate=");
		sb.append(getRecievedDate());
		sb.append(", returnedDate=");
		sb.append(getReturnedDate());
		sb.append(", assetInfo=");
		sb.append(getAssetInfo());
		sb.append(", returnedAssets=");
		sb.append(getReturnedAssets());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("com.dsi.intranet.eprocurement.model.Item");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemName</column-name><column-value><![CDATA[");
		sb.append(getItemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemDescription</column-name><column-value><![CDATA[");
		sb.append(getItemDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantity</column-name><column-value><![CDATA[");
		sb.append(getQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cost</column-name><column-value><![CDATA[");
		sb.append(getCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>originalCost</column-name><column-value><![CDATA[");
		sb.append(getOriginalCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wbselement</column-name><column-value><![CDATA[");
		sb.append(getWbselement());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>glAccNo</column-name><column-value><![CDATA[");
		sb.append(getGlAccNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>costCenter</column-name><column-value><![CDATA[");
		sb.append(getCostCenter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>requestId</column-name><column-value><![CDATA[");
		sb.append(getRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemInStock</column-name><column-value><![CDATA[");
		sb.append(getItemInStock());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vendorCode</column-name><column-value><![CDATA[");
		sb.append(getVendorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>purchaseOrder</column-name><column-value><![CDATA[");
		sb.append(getPurchaseOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recievedDate</column-name><column-value><![CDATA[");
		sb.append(getRecievedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>returnedDate</column-name><column-value><![CDATA[");
		sb.append(getReturnedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assetInfo</column-name><column-value><![CDATA[");
		sb.append(getAssetInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>returnedAssets</column-name><column-value><![CDATA[");
		sb.append(getReturnedAssets());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Item.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Item.class
		};
	private long _itemId;
	private String _itemName;
	private String _itemDescription;
	private long _quantity;
	private double _cost;
	private double _originalCost;
	private String _wbselement;
	private String _glAccNo;
	private String _costCenter;
	private long _requestId;
	private long _originalRequestId;
	private boolean _setOriginalRequestId;
	private boolean _itemInStock;
	private String _vendorCode;
	private String _purchaseOrder;
	private Date _recievedDate;
	private Date _returnedDate;
	private String _assetInfo;
	private String _returnedAssets;
	private long _createdBy;
	private Date _createdDate;
	private long _modifiedBy;
	private Date _modifiedDate;
	private long _companyId;
	private long _groupId;
	private long _columnBitmask;
	private Item _escapedModel;
}