/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.dsi.intranet.eprocurement.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.dsi.intranet.eprocurement.model.WorkflowReview;
import com.dsi.intranet.eprocurement.model.WorkflowReviewModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the WorkflowReview service. Represents a row in the &quot;eproc_workflow_review&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link WorkflowReviewModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkflowReviewImpl}.
 * </p>
 *
 * @author CIGNEX Technologies
 * @see WorkflowReviewImpl
 * @see WorkflowReview
 * @see WorkflowReviewModel
 * @generated
 */
@ProviderType
public class WorkflowReviewModelImpl extends BaseModelImpl<WorkflowReview>
	implements WorkflowReviewModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a workflow review model instance should use the {@link WorkflowReview} interface instead.
	 */
	public static final String TABLE_NAME = "eproc_workflow_review";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workflowReviewId", Types.BIGINT },
			{ "workflowRequestId", Types.BIGINT },
			{ "classNameId", Types.BIGINT },
			{ "classPK", Types.BIGINT },
			{ "updatedBy", Types.BIGINT },
			{ "updatedToStatus", Types.VARCHAR },
			{ "nextStage", Types.VARCHAR },
			{ "isApproverRole", Types.VARCHAR },
			{ "updatedDate", Types.TIMESTAMP },
			{ "approverComments", Types.VARCHAR },
			{ "emailComments", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("workflowReviewId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("workflowRequestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classNameId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("classPK", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("updatedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("updatedToStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nextStage", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("isApproverRole", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("updatedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("approverComments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailComments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table eproc_workflow_review (workflowReviewId LONG not null primary key,workflowRequestId LONG,classNameId LONG,classPK LONG,updatedBy LONG,updatedToStatus VARCHAR(75) null,nextStage VARCHAR(75) null,isApproverRole VARCHAR(75) null,updatedDate DATE null,approverComments VARCHAR(75) null,emailComments VARCHAR(75) null,companyId LONG,groupId LONG)";
	public static final String TABLE_SQL_DROP = "drop table eproc_workflow_review";
	public static final String ORDER_BY_JPQL = " ORDER BY workflowReview.workflowReviewId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eproc_workflow_review.workflowReviewId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowReview"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.dsi.intranet.eprocurement.model.WorkflowReview"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.dsi.intranet.eprocurement.model.WorkflowReview"),
			true);
	public static final long CLASSNAMEID_COLUMN_BITMASK = 1L;
	public static final long CLASSPK_COLUMN_BITMASK = 2L;
	public static final long COMPANYID_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long WORKFLOWREVIEWID_COLUMN_BITMASK = 16L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.dsi.intranet.eprocurement.model.WorkflowReview"));

	public WorkflowReviewModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workflowReviewId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkflowReviewId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workflowReviewId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkflowReview.class;
	}

	@Override
	public String getModelClassName() {
		return WorkflowReview.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workflowReviewId", getWorkflowReviewId());
		attributes.put("workflowRequestId", getWorkflowRequestId());
		attributes.put("classNameId", getClassNameId());
		attributes.put("classPK", getClassPK());
		attributes.put("updatedBy", getUpdatedBy());
		attributes.put("updatedToStatus", getUpdatedToStatus());
		attributes.put("nextStage", getNextStage());
		attributes.put("isApproverRole", getIsApproverRole());
		attributes.put("updatedDate", getUpdatedDate());
		attributes.put("approverComments", getApproverComments());
		attributes.put("emailComments", getEmailComments());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long workflowReviewId = (Long)attributes.get("workflowReviewId");

		if (workflowReviewId != null) {
			setWorkflowReviewId(workflowReviewId);
		}

		Long workflowRequestId = (Long)attributes.get("workflowRequestId");

		if (workflowRequestId != null) {
			setWorkflowRequestId(workflowRequestId);
		}

		Long classNameId = (Long)attributes.get("classNameId");

		if (classNameId != null) {
			setClassNameId(classNameId);
		}

		Long classPK = (Long)attributes.get("classPK");

		if (classPK != null) {
			setClassPK(classPK);
		}

		Long updatedBy = (Long)attributes.get("updatedBy");

		if (updatedBy != null) {
			setUpdatedBy(updatedBy);
		}

		String updatedToStatus = (String)attributes.get("updatedToStatus");

		if (updatedToStatus != null) {
			setUpdatedToStatus(updatedToStatus);
		}

		String nextStage = (String)attributes.get("nextStage");

		if (nextStage != null) {
			setNextStage(nextStage);
		}

		String isApproverRole = (String)attributes.get("isApproverRole");

		if (isApproverRole != null) {
			setIsApproverRole(isApproverRole);
		}

		Date updatedDate = (Date)attributes.get("updatedDate");

		if (updatedDate != null) {
			setUpdatedDate(updatedDate);
		}

		String approverComments = (String)attributes.get("approverComments");

		if (approverComments != null) {
			setApproverComments(approverComments);
		}

		String emailComments = (String)attributes.get("emailComments");

		if (emailComments != null) {
			setEmailComments(emailComments);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}
	}

	@Override
	public long getWorkflowReviewId() {
		return _workflowReviewId;
	}

	@Override
	public void setWorkflowReviewId(long workflowReviewId) {
		_workflowReviewId = workflowReviewId;
	}

	@Override
	public long getWorkflowRequestId() {
		return _workflowRequestId;
	}

	@Override
	public void setWorkflowRequestId(long workflowRequestId) {
		_workflowRequestId = workflowRequestId;
	}

	@Override
	public String getClassName() {
		if (getClassNameId() <= 0) {
			return StringPool.BLANK;
		}

		return PortalUtil.getClassName(getClassNameId());
	}

	@Override
	public void setClassName(String className) {
		long classNameId = 0;

		if (Validator.isNotNull(className)) {
			classNameId = PortalUtil.getClassNameId(className);
		}

		setClassNameId(classNameId);
	}

	@Override
	public long getClassNameId() {
		return _classNameId;
	}

	@Override
	public void setClassNameId(long classNameId) {
		_columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;

		if (!_setOriginalClassNameId) {
			_setOriginalClassNameId = true;

			_originalClassNameId = _classNameId;
		}

		_classNameId = classNameId;
	}

	public long getOriginalClassNameId() {
		return _originalClassNameId;
	}

	@Override
	public long getClassPK() {
		return _classPK;
	}

	@Override
	public void setClassPK(long classPK) {
		_columnBitmask |= CLASSPK_COLUMN_BITMASK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = _classPK;
		}

		_classPK = classPK;
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	@Override
	public long getUpdatedBy() {
		return _updatedBy;
	}

	@Override
	public void setUpdatedBy(long updatedBy) {
		_updatedBy = updatedBy;
	}

	@Override
	public String getUpdatedToStatus() {
		if (_updatedToStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _updatedToStatus;
		}
	}

	@Override
	public void setUpdatedToStatus(String updatedToStatus) {
		_updatedToStatus = updatedToStatus;
	}

	@Override
	public String getNextStage() {
		if (_nextStage == null) {
			return StringPool.BLANK;
		}
		else {
			return _nextStage;
		}
	}

	@Override
	public void setNextStage(String nextStage) {
		_nextStage = nextStage;
	}

	@Override
	public String getIsApproverRole() {
		if (_isApproverRole == null) {
			return StringPool.BLANK;
		}
		else {
			return _isApproverRole;
		}
	}

	@Override
	public void setIsApproverRole(String isApproverRole) {
		_isApproverRole = isApproverRole;
	}

	@Override
	public Date getUpdatedDate() {
		return _updatedDate;
	}

	@Override
	public void setUpdatedDate(Date updatedDate) {
		_updatedDate = updatedDate;
	}

	@Override
	public String getApproverComments() {
		if (_approverComments == null) {
			return StringPool.BLANK;
		}
		else {
			return _approverComments;
		}
	}

	@Override
	public void setApproverComments(String approverComments) {
		_approverComments = approverComments;
	}

	@Override
	public String getEmailComments() {
		if (_emailComments == null) {
			return StringPool.BLANK;
		}
		else {
			return _emailComments;
		}
	}

	@Override
	public void setEmailComments(String emailComments) {
		_emailComments = emailComments;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkflowReview.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkflowReview toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkflowReview)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkflowReviewImpl workflowReviewImpl = new WorkflowReviewImpl();

		workflowReviewImpl.setWorkflowReviewId(getWorkflowReviewId());
		workflowReviewImpl.setWorkflowRequestId(getWorkflowRequestId());
		workflowReviewImpl.setClassNameId(getClassNameId());
		workflowReviewImpl.setClassPK(getClassPK());
		workflowReviewImpl.setUpdatedBy(getUpdatedBy());
		workflowReviewImpl.setUpdatedToStatus(getUpdatedToStatus());
		workflowReviewImpl.setNextStage(getNextStage());
		workflowReviewImpl.setIsApproverRole(getIsApproverRole());
		workflowReviewImpl.setUpdatedDate(getUpdatedDate());
		workflowReviewImpl.setApproverComments(getApproverComments());
		workflowReviewImpl.setEmailComments(getEmailComments());
		workflowReviewImpl.setCompanyId(getCompanyId());
		workflowReviewImpl.setGroupId(getGroupId());

		workflowReviewImpl.resetOriginalValues();

		return workflowReviewImpl;
	}

	@Override
	public int compareTo(WorkflowReview workflowReview) {
		long primaryKey = workflowReview.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkflowReview)) {
			return false;
		}

		WorkflowReview workflowReview = (WorkflowReview)obj;

		long primaryKey = workflowReview.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		WorkflowReviewModelImpl workflowReviewModelImpl = this;

		workflowReviewModelImpl._originalClassNameId = workflowReviewModelImpl._classNameId;

		workflowReviewModelImpl._setOriginalClassNameId = false;

		workflowReviewModelImpl._originalClassPK = workflowReviewModelImpl._classPK;

		workflowReviewModelImpl._setOriginalClassPK = false;

		workflowReviewModelImpl._originalCompanyId = workflowReviewModelImpl._companyId;

		workflowReviewModelImpl._setOriginalCompanyId = false;

		workflowReviewModelImpl._originalGroupId = workflowReviewModelImpl._groupId;

		workflowReviewModelImpl._setOriginalGroupId = false;

		workflowReviewModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<WorkflowReview> toCacheModel() {
		WorkflowReviewCacheModel workflowReviewCacheModel = new WorkflowReviewCacheModel();

		workflowReviewCacheModel.workflowReviewId = getWorkflowReviewId();

		workflowReviewCacheModel.workflowRequestId = getWorkflowRequestId();

		workflowReviewCacheModel.classNameId = getClassNameId();

		workflowReviewCacheModel.classPK = getClassPK();

		workflowReviewCacheModel.updatedBy = getUpdatedBy();

		workflowReviewCacheModel.updatedToStatus = getUpdatedToStatus();

		String updatedToStatus = workflowReviewCacheModel.updatedToStatus;

		if ((updatedToStatus != null) && (updatedToStatus.length() == 0)) {
			workflowReviewCacheModel.updatedToStatus = null;
		}

		workflowReviewCacheModel.nextStage = getNextStage();

		String nextStage = workflowReviewCacheModel.nextStage;

		if ((nextStage != null) && (nextStage.length() == 0)) {
			workflowReviewCacheModel.nextStage = null;
		}

		workflowReviewCacheModel.isApproverRole = getIsApproverRole();

		String isApproverRole = workflowReviewCacheModel.isApproverRole;

		if ((isApproverRole != null) && (isApproverRole.length() == 0)) {
			workflowReviewCacheModel.isApproverRole = null;
		}

		Date updatedDate = getUpdatedDate();

		if (updatedDate != null) {
			workflowReviewCacheModel.updatedDate = updatedDate.getTime();
		}
		else {
			workflowReviewCacheModel.updatedDate = Long.MIN_VALUE;
		}

		workflowReviewCacheModel.approverComments = getApproverComments();

		String approverComments = workflowReviewCacheModel.approverComments;

		if ((approverComments != null) && (approverComments.length() == 0)) {
			workflowReviewCacheModel.approverComments = null;
		}

		workflowReviewCacheModel.emailComments = getEmailComments();

		String emailComments = workflowReviewCacheModel.emailComments;

		if ((emailComments != null) && (emailComments.length() == 0)) {
			workflowReviewCacheModel.emailComments = null;
		}

		workflowReviewCacheModel.companyId = getCompanyId();

		workflowReviewCacheModel.groupId = getGroupId();

		return workflowReviewCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{workflowReviewId=");
		sb.append(getWorkflowReviewId());
		sb.append(", workflowRequestId=");
		sb.append(getWorkflowRequestId());
		sb.append(", classNameId=");
		sb.append(getClassNameId());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append(", updatedBy=");
		sb.append(getUpdatedBy());
		sb.append(", updatedToStatus=");
		sb.append(getUpdatedToStatus());
		sb.append(", nextStage=");
		sb.append(getNextStage());
		sb.append(", isApproverRole=");
		sb.append(getIsApproverRole());
		sb.append(", updatedDate=");
		sb.append(getUpdatedDate());
		sb.append(", approverComments=");
		sb.append(getApproverComments());
		sb.append(", emailComments=");
		sb.append(getEmailComments());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.dsi.intranet.eprocurement.model.WorkflowReview");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workflowReviewId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowReviewId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowRequestId</column-name><column-value><![CDATA[");
		sb.append(getWorkflowRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classNameId</column-name><column-value><![CDATA[");
		sb.append(getClassNameId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedBy</column-name><column-value><![CDATA[");
		sb.append(getUpdatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedToStatus</column-name><column-value><![CDATA[");
		sb.append(getUpdatedToStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nextStage</column-name><column-value><![CDATA[");
		sb.append(getNextStage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isApproverRole</column-name><column-value><![CDATA[");
		sb.append(getIsApproverRole());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>updatedDate</column-name><column-value><![CDATA[");
		sb.append(getUpdatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approverComments</column-name><column-value><![CDATA[");
		sb.append(getApproverComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emailComments</column-name><column-value><![CDATA[");
		sb.append(getEmailComments());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = WorkflowReview.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkflowReview.class
		};
	private long _workflowReviewId;
	private long _workflowRequestId;
	private long _classNameId;
	private long _originalClassNameId;
	private boolean _setOriginalClassNameId;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private long _updatedBy;
	private String _updatedToStatus;
	private String _nextStage;
	private String _isApproverRole;
	private Date _updatedDate;
	private String _approverComments;
	private String _emailComments;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _columnBitmask;
	private WorkflowReview _escapedModel;
}